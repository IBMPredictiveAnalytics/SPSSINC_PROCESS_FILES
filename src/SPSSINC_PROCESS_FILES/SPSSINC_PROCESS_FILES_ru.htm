<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=utf-8">

  <title>Применить файл синтаксиса к набору файлов данных</title>
  <style type="text/css">

  <!-- 

  H1 {font-weight:bold; color:#006699; font-size:125%; }
  H2 {font-weight:bold; color:#006699; font-size:110%; }
  TABLE {font-size:100%;}

  /* paragraph tags */
  .step {text-indent: -1.3em; margin-left:1.3em; margin-top: 0px;}
  .menuselection {margin-left:10px}
  .bullet {list-style-type: disc;margin-top:12px; margin-left:36px; text-indent:-1em; }
  .codeblock {background-color: #ffffe6; display:block; margin-left:5px; padding:5px;}

  /* inline tags */
  .screen {font-weight:bold; color:#408080}                       /*** used refer to on-screen text ***/
  .name {font-style: italic}                                                       /*** used to tag names, such as variable names, file names, and so forth ***/
  .runinhead {font-weight: bold} 
  .superscript {vertical-align:super; font-size:80%}
  .subscript {vertical-align:sub; font-size:80%}


  --> 
  </style>
</head>

<body>
  <h1>Применить файл синтаксиса к набору файлов данных</h1>Эта процедура предоставляет способ поиска по собранию файлов данных, чтобы применить единый синтаксис к каждому из них. Этот синтаксис может содержать любые команды. Для обращения к спецификациям ввода и вывода предоставляются макрокоманды и хэндлы файлов.

  <p>Использование этой процедуры удобно в сочетании с командой SPSSINC SPLIT DATASET, которая может разбить набор данных в соответствии со значениями переменной расщепления.</p>

  <p><span class="runinhead">Входные файлы данных, заданные выражением с символами подстановки.</span> Выберите каталог для обработки и, если хотите, задайте паттерн файла. Например,<br>
  c:\mydata\x*.sav<br>
  будет указывать на обработку в каталоге c:\mydata всех файлов sav, имена которых начинаются с буквы x.</p>

  <p class="bullet">• Если выражение для имен файлов отсутствует, предполагаются все файлы *.sav.</p>

  <p class="bullet">• Необходимо выбрать или эту опцию, или следующую опцию <span class="screen">Входные данные</span>, но не обе опции одновременно.</p>

  <p><span class="runinhead">Входные файлы данных, заданные в файле.</span> Обработайте все файлы, перечисленные в заданном файле.
  Команда SPSSINC SPLIT DATASET может создать файл в правильном формате.</p>

  <p class="bullet">• Необходимо выбрать или эту опцию, или предыдущую опцию <span class="screen">Входные данные</span>, но не обе опции одновременно.</p>

  <p><span class="runinhead">Файл синтаксиса, применимого ко всем файлам данных.</span> Для каждого входного набора данных будет вызван файл синтаксиса. Он должен прочитать файл и произвести все нужные операции. Для обращения к входному файлу и различным положениям вывода определены хэндлы файлов и макрокоманды. Хэндлы файлов могут быть следующими.</p>

  <ul>
    <li>JOB_INPUTFILE: Входной файл.</li>

    <li>JOB_DATADIR: Каталог входного файла</li>

    <li>JOB_OUTPUTDATADIR: Заданный каталог данных вывода или <i>&lt;NONE&gt;</i></li>

    <li>JOB_VIEWERDIR: Заданный каталог вывода для программы просмотра или <i>&lt;NONE&gt;</i></li>
  </ul>

  <p class="bullet">• Данные из файла SAV можно прочесть с помощью команды<br>
  GET FILE="JOB_INPUTFILE".</p>

  <p class="bullet">• Макрокоманды определяются с теми же именами, но с начальным символом "!". Определены две дополнительные макрокоманды.</p>

  <ul>
    <li>!JOB_DATAFILEROOT: Имя файла входных данных без расширения</li>

    <li>!JOB_DATAFILEEXT: Расширение файла входных данных</li>
  </ul>

  <p>Текст <i>!JOB</i> или <i>JOB</i> заменяется на корневое имя, заданное в управляющем элементе корневых имен.</p>

  <p class="bullet">• Текст макрокоманды заключается в кавычки. Здесь приведен пример кода, который можно использовать для экспорта содержимого программы просмотра в заданный для нее каталог с помощью файла данных с расширением .xls.<br></p>

  <p class="code">DEFINE !out ()
  !QUOTE(!CONCAT(!EVAL(!UNQUOTE(!JOB_VIEWERDIR)), "/",
  !EVAL(!unquote(!JOB_DATAFILEROOT)), ".xls"))<br>
  !ENDDEFINE.<br>
  OUTPUT EXPORT /XLS DOCUMENTFILE =!out.</p>

  <p><span class="runinhead">Каталог для файлов данных вывода.</span> Если он задан, для каждого набора данных файл данных будет записан как файл .sav в этот каталог после выполнения синтаксиса. Это может быть полезно при выполнении преобразований для набора файлов. Конечно, вы можете оставить это поле пустым и записать любые данные в файл вывода по своему выбору. Хэндл файла JOB_OUTPUTDATADIR или макрокоманда !JOB_OUTPUTDATADIR определяет положение вывода данных, заданное в этой команде</p>

  <p><span class="runinhead">Вывод программы просмотра.</span> Вывод программы просмотра можно сохранить или как отдельный файл для каждого файла данных, или как единый файл для всего задания. Включите соответствующую радиокнопку и введите или имя каталога, или спецификацию файла. Если вы выбираете запись отдельного файла, но в следующем управляющем элементе вводится только каталог, файл будет назван <i>VIEWER.SPV</i>. При помощи кнопки Обзор этого управляющего элемента можно задать только каталог, но вы можете ввести и имя файла.</p>

  <p><span class="runinhead">Записать журнал задания в файл.</span> Задайте файл для журнала задания. В журнале перечислены обработанные и записанные процедурой файлы, каждый с отметкой времени.</p>

  <p class="bullet">• Операции, проводимые файлом синтаксиса, не записываются.</p>

  <p class="bullet">• В случае возникновения серьезной ошибки при обработке файла запись об этой ошибке будет внесена в журнал.</p>

  <p><span class="runinhead">Синтаксис для применения перед обработкой.</span> Можно задать файл синтаксиса, который будет выполняться непосредственно перед началом обработки входного файла. Макрокоманды и хэндлы файлов будут определены, как для первого файла в списке обработки. В случае возникновения серьезной ошибки обработка будет прервана.</p>

  <p><span class="runinhead">Синтаксис для выполнения после всей обработки.</span> Можно задать файл синтаксиса, который будет выполняться непосредственно после окончания обработки входных файлов. Макрокоманды и хэндлы файлов будут определены, как для последнего файла в списке обработки.</p>

  <h2>Параметры</h2>

  <p><span class="runinhead">Режим файлов журнала.</span> Выберите способ добавления записей для задания в журнал, будут ли они присоединяться к существующему файлу, или заменять содержимое.</p>

  <p><span class="runinhead">Обработка файла данных после каждого шага.</span> Выберите опцию <span class="screen">Закрыть</span>, чтобы все наборы данных закрывались после каждой итерации обработки входного файла.
  Оставлять наборы данных открытыми после каждого шага полезно, если вы объединяете несколько наборов данных в один. После выполнения данной команды окончательный набор данных можно закрыть.</p>

  <p><span class="runinhead">Обработка ошибок.</span> При возникновении ошибки можно выбрать дальнейшее действие - или продолжить обработку следующего файла данных, или прекратить обработку всех следующих файлов. При возможности, даже если задана остановка обработки, файлы данных вывода и программы просмотра все равно будут записаны для файла данных, который вызвал ошибку.</p>

  <p><span class="runinhead">Корневое имя для макрокоманд и хэндлов файлов.</span> По умолчанию у заданных хэндлов файлов и макрокоманд используются префиксы JOB и !JOB, соответственно, после которых следует знак подчеркивания. Вместо JOB можно задать другой префикс.
  Для макрокоманды перед префиксом будет стоять символ <i>!</i>.</p>

  <h2>Определения макрокоманд</h2>

  <p>Используйте это диалоговое подокно для определения собственных макрокоманд, которые можно будет использовать в файле синтаксиса. Можно определить до пяти макрокоманд с именами от !PARM1 до !PARM5, значениями которых будет обычный синтаксис или имена переменных, а также до пяти макрокоманд с именами от !QPARM1 до !QPARM5, значениями которых будут литеральные строки в кавычках. Строки в кавычках полезны для заголовков или строковых выражений при преобразованиях.</p>

  <p><span class="runinhead">Макрокоманды со значениями без кавычек.</span> Введите любой текст макрокоманды, представляющий синтаксис SPSS, который должен появиться без кавычек.</p>

  <p><span class="runinhead">Макрокоманды со значениями - литералами в кавычках.</span> Введите любой текст макрокоманды, представляющий синтаксис SPSS, который должен появиться в кавычках, например, заголовок, метку или имя файла.</p>

  <p class="bullet">• Чтобы заключить литерал в кавычки, используйте символы одинарных кавычек ('). Сгенерированный текст макрокоманды будет заключен в двойные кавычки (").</p>

  <h3>Пример макрокоманды для поиска файлов данных с конкретным ID наблюдения</h3>Предположим, у некоторого набора файлов есть переменная ID с именем PatientID, а вы хотите найти все встречаемые ID "Johann Schmidt". В файле синтаксиса для этого можно использовать следующий фрагмент. <code><br>
  SELECT IF !PARM1 EQ !QPARM1.<br>
  FREQUENCIES !PARM1.</code><br>
  где PatientID вводится в поле PARM1, а Johann Schmidt - в поле QPARM1.

  <p class="bullet">• Задайте для параметра Обработка ошибок значение Продолжить со следующим файлом, так как, если никакие наблюдения не выбраны, команда FREQUENCIES сгенерирует ошибку. (Для подавления полученной таблицы Предупреждения можно использовать OMS).</p>

  <p class="bullet">• Для упрощения просмотра результатов запишите выходные данные программы просмотра в отдельный файл.</p>

  <h2>Утилита поиска данных</h2>В пункте меню Изменить&gt;Поиск файлов данных найдите диалоговое окно, использующее эту команду для поиска наблюдений в наборе файлов SAV.

  <h2>Дополнительные возможности</h2>Введите команду<br>
  SPSSINC PROCESS FILES /HELP.<br>
  чтобы вывести полное описание синтаксиса. Используя синтаксис, выходные данные можно записать в текущий рабочий каталог обработчика SPSS. Имя этого каталога выводится командой SHOW DIRECTORY.

  <p>Чтобы задать файлы для обработки с помощью одного файла, создайте файл, в котором каждая строка содержит одно имя, включающее в себя путь к файлу. Это имя должно быть заключено в двойные кавычки (").
  Все остальное после имени в строке будет игнорироваться. Пустые строки и строки, начинающиеся с #, также игнорируются.</p>

  <h2>Технические требования</h2>Этой команде требуется подключаемый модуль программирования Python.
Его можно найти на установочном компакт-диске IBM SPSS Statistics или скачать с сайта SPSS Developer Central (www.spss.com/devcentral).
  <hr>

  <p style="font-size:80%;">© Copyright IBM Corp. 1989, 2013</p>
</body>
</html>
